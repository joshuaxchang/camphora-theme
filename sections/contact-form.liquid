<div class="max-w-xl mx-auto py-16 px-4">
  <h1 id="page-title" class="page-title-anchor font-heading text-4xl font-bold mb-4 text-center text-brand-text">{{ page.title }}</h1>
  {%- if page.content != blank -%}
    <div class="prose max-w-none mb-12 text-center">
      {{ page.content }}
    </div>
  {%- endif -%}

  {%- form 'contact', id: 'contact-page-form', action: '#page-title' -%}

    <div id="contact-form-success-message" class="hidden mb-6 p-4 bg-brand-accent-light border border-brand-primary/20 text-brand-text rounded-lg text-center font-medium"></div>
    
    {{ form.errors | default_errors }}

    <div id="contact-form-fields" class="space-y-6">
      <div>
        <label for="ContactFormName" class="block text-base font-medium text-brand-text mb-2">Name</label>
        <input type="text" id="ContactFormName" name="contact[name]"
               class="w-full bg-brand-card rounded-lg border border-gray-300 shadow-sm focus:outline-none focus:border-brand-primary p-3">
      </div>
      <div>
        <label for="ContactFormEmail" class="block text-base font-medium text-brand-text mb-2">Email</label>
        <input type="email" id="ContactFormEmail" name="contact[email]"
               class="w-full bg-brand-card rounded-lg border border-gray-300 shadow-sm focus:outline-none focus:border-brand-primary p-3">
      </div>
      <div>
        <label for="ContactFormMessage" class="block text-base font-medium text-brand-text mb-2">Message</label>
        <textarea id="ContactFormMessage" name="contact[body]" rows="8"
                  class="w-full bg-brand-card rounded-lg border border-gray-300 shadow-sm focus:outline-none focus:border-brand-primary p-3 resize-y"></textarea>
      </div>
      <div class="text-center pt-4">
        <button type="submit"
                id="contact-form-submit-button"
                class="bg-brand-primary text-white font-bold rounded-lg shadow-lg shadow-neutral-900/20 hover:shadow-xl transform hover:-translate-y-1 transition-all duration-300 w-48 h-12 flex items-center justify-center mx-auto disabled:opacity-70 disabled:transform-none disabled:shadow-lg">
          <span class="button-content-wrapper">
            <span>Send Message</span>
          </span>
        </button>
      </div>
    </div>
  {%- endform -%}
</div>

<script>
document.addEventListener('DOMContentLoaded', function () {
  const form = document.getElementById('contact-page-form');
  if (!form) return;

  const submitButton = document.getElementById('contact-form-submit-button');
  const buttonContentWrapper = submitButton.querySelector('.button-content-wrapper');
  const successMessageContainer = document.getElementById('contact-form-success-message');
  const originalButtonHTML = buttonContentWrapper.innerHTML;
  
  const spinnerIcon = `<svg class="animate-spin h-5 w-5 text-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24"><circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle><path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path></svg>`;

  const resetToOriginalState = () => {
    submitButton.disabled = false;
    submitButton.classList.remove('bg-brand-primary', 'hover:bg-brand-primary', 'transform-none', 'animate-pulse-once');
    submitButton.classList.add('bg-brand-primary', 'hover:-translate-y-1', 'disabled:opacity-70');
    buttonContentWrapper.innerHTML = originalButtonHTML;
  };

  const handleSuccess = (isFromRedirect = false) => {
    successMessageContainer.innerHTML = "Thank you! We've received your message and will get back to you shortly.";
    successMessageContainer.classList.remove('hidden');
    
    submitButton.disabled = true;
    submitButton.classList.add('bg-brand-primary', 'hover:bg-brand-primary', 'transform-none');
    submitButton.classList.remove('hover:-translate-y-1', 'disabled:opacity-70');
    buttonContentWrapper.innerHTML = '<span>âœ“ Message Sent!</span>';
    form.reset(); 

    if (isFromRedirect) {
      submitButton.classList.add('animate-pulse-once');
    }

    setTimeout(() => {
      resetToOriginalState();
    }, 4000);
  };

  const urlParams = new URLSearchParams(window.location.search);
  
  if (urlParams.has('contact_posted') && window.location.hash === '#page-title') {
    handleSuccess(true);
  }

  form.addEventListener('submit', function (event) {
    event.preventDefault();
    successMessageContainer.classList.add('hidden');
    
    submitButton.disabled = true;
    buttonContentWrapper.innerHTML = spinnerIcon;
    submitButton.classList.remove('hover:-translate-y-1');

    const formData = new FormData(form);

    fetch('/contact', {
      method: 'POST',
      headers: { 'X-Requested-With': 'XMLHttpRequest' },
      body: formData
    })
    .then(response => {
      if (response.ok) {
        handleSuccess();
      } else {
        form.submit();
      }
    })
    .catch(error => {
      console.warn('Fetch failed, falling back to standard submission:', error);
      form.submit();
    });
  });
});
</script>

{% schema %}
{
  "name": "Contact Form",
  "settings": []
}
{% endschema %}